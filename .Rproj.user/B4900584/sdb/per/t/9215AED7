{
    "collab_server" : "",
    "contents" : "#' Maps gender predictions from Brazilian first names by state\n#'\n#' \\code{map_gender} consults the Instituto Brasileiro de Geografia e Estatistica's 2010 Census API\n#' to extract the number of male or female persons with a given name in a given state.\n#'\n#' @param name A string specifying a person's first name. The name can also be passed to the function\n#' as a full name (e.g., Ana Maria de Souza). \\code{get_gender} is case insensitive.\n#' @param gender A string with the gender to loop for. Valid inputs are \\code{male}, \\code{female}, and \\code{NULL},\n#' in which case the functions returns results for all persons with a given name.\n#'\n#' @return \\code{get_gender} returns ...\n#'\n#'\n#' @import dplyr\n#' @import httr\n#' @export\n\n\nmap_gender <- function(name, gender = NULL){\n\n\n  # Clean name\n  name <- clean_names(name)\n\n  # Gender input\n  if(is.null(gender)) gender <- NULL\n  else if(tolower(gender) == \"female\") gender <- \"f\"\n  else if(tolower(gender) == \"male\") gender <- \"m\"\n\n  # API endpoint\n  ibge <- \"http://servicodados.ibge.gov.br/api/v1/censos/nomes/mapa\"\n\n  # GET\n  total <- httr::GET(ibge, query = list(nome = name, sexo = gender))\n\n  # Test response\n  httr::stop_for_status(total)\n\n  # Parse and return\n  httr::content(total, as = \"text\") %>%\n    jsonlite::fromJSON()\n}\n",
    "created" : 1495372604336.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1769264546",
    "id" : "9215AED7",
    "lastKnownWriteTime" : 1495373843,
    "last_content_update" : 1495373843119,
    "path" : "C:/Users/User/Google Drive/R/Pacotes/genderBR/R/map_gender.R",
    "project_path" : "R/map_gender.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}