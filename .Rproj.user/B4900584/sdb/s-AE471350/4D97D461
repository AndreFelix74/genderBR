{
    "collab_server" : "",
    "contents" : "#' State's abbreviations\n#'\n#' Use this function to get a \\code{data.frame} with the full names, abbreviations\n#' (acronym), and IBGE codes of all Brazilian states.\n#'\n#' @return A \\code{tbl_df, tbl, data.frame} with two variables: \\code{state}, \\code{abb}, and \\code{code}.\n#' @export\n\nbr_states <- function(){\n\n  dplyr::tibble(state = c(\"ACRE\", \"ALAGOAS\", \"AMAPA\", \"AMAZONAS\", \"BAHIA\", \"CEARA\", \"DISTRITO FEDERAL\",\n                       \"ESPIRITO SANTO\", \"GOIAS\", \"MARANHAO\", \"MATO GROSSO DO SUL\", \"MATO GROSSO\",\n                       \"MINAS GERAIS\", \"PARA\", \"PARAIBA\", \"PARANA\", \"PERNAMBUCO\", \"PIAUI\",\n                       \"RIO DE JANEIRO\", \"RIO GRANDE DO NORTE\", \"RIO GRANDE DO SUL\", \"RONDONIA\",\n                       \"RORAIMA\", \"SANTA CATARINA\", \"SAO PAULO\", \"SERGIPE\", \"TOCANTINS\"),\n             abb = c(\"AC\", \"AL\", \"AP\", \"AM\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\",\n                     \"MS\", \"MT\", \"MG\", \"PA\", \"PA\", \"PR\",\"PE\", \"PI\", \"RJ\", \"RN\",\n                     \"RS\", \"RO\", \"RR\", \"SC\", \"SP\", \"SE\", \"TO\"),\n             code = c(12L, 27L, 16L, 13L, 29L, 23L, 53L, 32L, 52L, 21L, 51L, 50L,\n                      31L, 15L, 25L, 41L, 26L, 22L, 33L, 24L, 43L, 11L, 14L, 42L, 35L,\n                      28L, 17L))\n}\n\n\n# Internal function to test void names\ntest_responses <- function(response1, response2, prob){\n\n  httr::stop_for_status(response1)\n  httr::stop_for_status(response2)\n\n  if(length(response1$content) == 2 & length(response2$content) == 2) return(NA)\n  if(length(response1$content) == 2 & length(response2$content) > 2 & prob == TRUE) return(0)\n  if(length(response1$content) > 2 & length(response2$content) == 2 & prob == TRUE) return(1)\n  if(length(response1$content) == 2 & length(response2$content) > 2 & prob == FALSE) return(\"Male\")\n  if(length(response1$content) > 2 & length(response2$content) == 2 & prob == FALSE) return(\"Female\")\n\n  NULL\n}\n\n\n# Internal function to round numeric guess\nround_guess <- function(prob, threshold){\n\n  if(threshold < 0 | threshold > 1) stop(\"Threshold must be between 0 and 1.\")\n\n  if(prob > threshold) return(\"Female\")\n  else if(prob < 1 - threshold) return(\"Male\")\n  else return(as.character(NA))\n}\n\n\n# Internal function to clean first names\nclean_names <- function(name){\n\n  sub(\"(.*?) .*\", \"\\\\1\", name) %>%\n    tolower()\n}\n\n\n# Internal function to match state abbreviations and state codes\nstate2code <- function(uf){\n\n  ufs <- br_states()$abb\n\n  uf <- toupper(uf) %>%\n    match.arg(ufs)\n\n  br_states()$code[match(uf, ufs)]\n}\n\n\n# Avoid the R CMD check note about magrittr's dot\nutils::globalVariables(\".\")\n",
    "created" : 1495470700554.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3089866625",
    "id" : "4D97D461",
    "lastKnownWriteTime" : 1495476261,
    "last_content_update" : 1495476261306,
    "path" : "C:/Users/User/Google Drive/R/Pacotes/genderBR/R/utils.R",
    "project_path" : "R/utils.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}